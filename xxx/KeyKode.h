/* -LICENSE-START-
** Copyright (c) 2021 Blackmagic Design
** Permission is hereby granted, free of charge, to any person or organization obtaining a copy
** of the software and accompanying documentation (the "Software") to use, reproduce,
** display, distribute, sub-license, execute, and transmit the Software, and to prepare
** derivative works of the Software, and to permit third-parties to whom the Software is
** furnished to do so, in accordance with:
**
** (1) if the Software is obtained from Blackmagic Design, the End User License Agreement for
** the Software Development Kit (“EULA”) available at
** https://downloads.blackmagicdesign.com/EULA/Cintel/Cintel-End-User-License-Agreement.pdf; or
**
** (2) if the Software is obtained from any third party, such licensing terms as notified by
** that third party,
** and all subject to the following:
**
** (3) the copyright notices in the Software and this entire statement, including the above
** license grant, this restriction and the following disclaimer, must be included in all copies
** of the Software, in whole or in part, and all derivative works of the Software, unless
** such copies or derivative works are solely in the form of machine-executable object code
** generated by a source language processor.
**
** (4) THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
** INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE
** DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT,
** TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
** OTHER DEALINGS IN THE SOFTWARE.
**
** A copy of the Software is available free of charge at
** https://www.blackmagicdesign.com/developer/product/cintel
**
** -LICENSE-END-
*/


#pragma once

#include <array>
#include <cstdint>
#include <cstring>
#include <string>

class Keykode
{
public:
	Keykode(const std::array<int64_t, 2>& rawKeykode)
	{
		memcpy(m_rawBytes, reinterpret_cast<const char*>(rawKeykode.data()), sizeof(m_rawBytes));
	}

	std::string	toString() const;

private:
	static const unsigned	kRawBytesLength = 16;
	char					m_rawBytes[kRawBytesLength];

	enum FilmManufacturers
	{
		kManufacturerUnknown	= -1,
		kManufacturerORWO		= 0,
		kManufacturerAGFA		= 1,
		kManufacturerKodak		= 2,
		kManufacturerFUJI		= 3,
	};

	struct FilmManufacturerEntry
	{
		int					id;
		FilmManufacturers	manufacturer;
		std::string			manufacturerName;
		std::string			prefix35mm;
		std::string			prefix16mm;
		std::string			prefix8mm;
	};

	struct FilmTypeEntry
	{
		int					id;
		std::string			stockLetters;
		std::string			stockNumber;
		std::string			stockDesctiption;
	};

	bool					valid() const;
	FilmManufacturerEntry	findManufacturer() const;
	FilmTypeEntry			findStock() const;
	std::string				prefixString() const;
	std::string				feetString() const;
	std::string				perfString() const;

	const static FilmManufacturerEntry manufacturerData[];
	const static FilmManufacturerEntry unknownManufacturerEntry;

	const static FilmTypeEntry orwoStockData[];
	const static FilmTypeEntry agfaStockData[];
	const static FilmTypeEntry kodakStockData[];
	const static FilmTypeEntry fujiStockData[];
	const static FilmTypeEntry unknownFilmTypeEntry;
};
